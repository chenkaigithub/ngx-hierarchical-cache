lua_shared_dict hit 10m;
init_by_lua 'local hitdata = ngx.shared.hit
    hitdata:set("hit",0)
';
server {
    listen 80;
    server_name vod.daledi.net;
    #set $iscache "nocache";
    #set $rdscache "nocache";
    req_status vstatus;
    set $sercureID "cwl9HOC515fqjpxOPkKDA9daVQiVvuNa5qNAjntrjrWrpefO7X5LFBFPYD945ns9";
    set $securepurge "zWUXYIuQNw02nTXeSW260nJnATCG0745S2ncDlPk4i3RCrrwxysr0bLN3eqEHqiy";
    access_log /data/logs/nginx/vod.access.log main;
    proxy_set_header Host $http_host;
    proxy_intercept_errors on;
    error_page 404 500 501 502 503 504 = /404.html;
    set $counthit 0;
    log_by_lua 'local hitdata = ngx.shared.hit
        counthit = hitdata:get("hit")
        if ngx.var.upstream_http_x_cache == "HIT" or ngx.var.upstream_cache_status == "HIT" or ngx.var.srcache_fetch_status == "HIT" then
            counthit = counthit + 1
            hitdata:set("hit",counthit)
            ngx.var.counthit = 1
        else
            ngx.var.counthit = 0 
        end
    ';

    location / {
        return 403;
    }
    if ($uri ~ "^/purge/") {
        set_by_lua $chk '
            chkmd5 = ngx.md5(ngx.var.securepurge .. ngx.var.uri .. ngx.var.http_x_auth_time)
            if chkmd5 == ngx.var.http_x_auth_key and os.time() - tonumber(ngx.var.http_x_auth_time) <= 300 then
                return 1
            end
            return 0
        ';
    }

    location ~ "^/purge/mem(/.*)" {
        if ($chk != 1) {
            return 403;
        }
        set_md5 $key $host$1;
        redis2_query del $key;
        redis2_pass 127.0.0.1:6379;
    }

    location ~ "^/purge/ssd(/.*)" {
        if ($chk != 1) {
            return 403;
        }
        proxy_cache_purge ssd_cache $host$1;
    } 
    
    location ~ "^/purge/hd(/.*)" {
        if ($chk != 1) {
            return 403;
        }
        proxy_set_header Chash $1;
        proxy_pass http://hdcache;
    }

    location ~ "^/vod/(\d+)/(\w{32})(/.+)" {
        set $timestamp $1;
        set $md5Sum $2;
        set $fname $3;
        set_by_lua $checkMd5 '
            local md5sum = string.lower(ngx.var.md5Sum)
            local md5sum2 = ngx.md5(ngx.var.timestamp .. ngx.var.sercureID .. ngx.var.fname)
            if md5sum ~= md5sum2 then
                return 1
            end
            local now = os.time()
            local req_time = tonumber(ngx.var.timestamp)
            if now < req_time - 600 or now > req_time + 7200 then
                return 1
            end
            return 0
        ';
        if ($checkMd5 = "1") {
            return 403;
        }
        set_md5 $key $host$fname;
        srcache_fetch GET /get_redis key=$key;
        srcache_store PUT /set_redis key=$key&exptime=7200;
        srcache_min_uses 5;
        srcache_store_max_size 20m;
        #srcache_store_skip $rdscache;
        #proxy_cache_bypass $iscache;
        #proxy_no_cache $iscache;
        proxy_cache_key $host$fname;
        proxy_cache ssd_cache;
        proxy_cache_valid 200 1d;
        proxy_cache_min_uses 3;
        proxy_ignore_headers Cache-Control Expires;
        proxy_set_header Chash $fname;
        proxy_pass http://hdcache$fname;
    }

    location = /get_redis {
        internal;
        set $redis_key $arg_key; 
        redis_pass 127.0.0.1:6379;
    }

    location = /set_redis {
        internal;
        redis2_query set $arg_key $echo_request_body;
        redis2_query expire $arg_key $arg_exptime;
        redis2_pass 127.0.0.1:6379;
    }
    location = /404.html {
        root html;
    }
}

